
node{
   stage('SCM Checkout'){
       git credentialsId: 'github-creds', url: 'https://github.com/garyrizzo1992/crypto-ticker'
   }
   stage('Build Docker Image'){
      dir("yfinance"){
         sh '''
         docker buildx create --name mybuilder || true
         docker buildx use mybuilder
         docker buildx build --platform linux/arm/v7 -t registry.gitlab.com/garyrizzo1992/crypto-ticker:${BUILD_NUMBER} . --load   
         '''
      }
   }
   stage('Push Docker Image'){
     withCredentials([usernamePassword(credentialsId: 'gitlab-creds', usernameVariable: 'user', passwordVariable: 'pass')]) {
        sh  "docker login registry.gitlab.com -u ${user} -p ${pass}"
     }
     sh "docker push registry.gitlab.com/garyrizzo1992/crypto-ticker:${BUILD_NUMBER}"
   }
   // stage('generate artifact'){
   //    sh '''
   //       mkdir crypto-ticker -p
   //       cp yfinance/get.py crypto-ticker/get.py
   //       cp yfinance/Dockerfile crypto-ticker/Dockerfile
   //       tar -cf crypto-ticker.tar crypto-ticker
   //    '''
   // }
    stage('Release') {
            withCredentials([usernamePassword(credentialsId: 'gitlab-creds', usernameVariable: 'user', passwordVariable: 'pass')]) {
        script {
            def monitor = [:]
            monitor.name = 'rpi'
            monitor.host = '192.168.1.32'
            monitor.port = 22
            monitor.allowAnyHosts = true
            withCredentials([
              sshUserPrivateKey(
                credentialsId:      'gary-ThinkPad-T495s',
                keyFileVariable:    'identity',
                passphraseVariable: '',
                usernameVariable:   'userName'
            )]) {
              monitor.user         = "pi"
              monitor.identityFile = identity
            //   sshPut     remote: monitor, from: 'crypto-ticker.tar', into: "/tmp/" , sudo: true
            //   sshCommand remote: monitor, command: "mkdir -p /data/workspace/" , sudo: true
            //   sshCommand remote: monitor, command: "tar -xvf /tmp/crypto-ticker.tar --strip 1 --directory /data/workspace/" , sudo: true
            //   sshCommand remote: monitor, command: "docker build -t crypto-ticker:${BUILD_NUMBER} /data/workspace/"
            //   sshCommand remote: monitor, command: "docker run crypto-ticker:${BUILD_NUMBER}"
              sshCommand remote: monitor, command: "docker run registry.gitlab.com/garyrizzo1992/crypto-ticker:${BUILD_NUMBER}"
            //   sshCommand remote: monitor, command: "rm -r /data/workspace" , sudo: true
            }
          }
            }
        
      
    }
    post {
        always {
            deleteDir() /* clean up our workspace */
        }
    }
}
