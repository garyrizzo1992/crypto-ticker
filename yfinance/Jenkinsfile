
node{
   stage('SCM Checkout'){
       git credentialsId: 'github-creds', url: 'https://github.com/garyrizzo1992/crypto-ticker'
   }
//    stage('Mvn Package'){
//      def mvnHome = tool name: 'maven-3', type: 'maven'
//      def mvnCMD = "${mvnHome}/bin/mvn"
//      sh "${mvnCMD} clean package"
//    }
   stage('Build Docker Image'){
      dir("yfinance"){
         sh  "docker build -t registry.gitlab.com/garyrizzo1992/crypto-ticker:${BUILD_NUMBER} ."
      }
   }
   stage('Push Docker Image'){
     withCredentials([usernamePassword(credentialsId: 'gitlab-creds', usernameVariable: 'user', passwordVariable: 'pass')]) {
        sh  "docker login registry.gitlab.com -u ${user} -p ${pass}"
     }
     sh "docker push registry.gitlab.com/garyrizzo1992/crypto-ticker:${BUILD_NUMBER}"
   }
    stage('Release') {
            withCredentials([usernamePassword(credentialsId: 'gitlab-creds', usernameVariable: 'user', passwordVariable: 'pass')]) {
        script {
            def monitor = [:]
            monitor.name = 'rpi'
            monitor.host = '192.168.1.32'
            monitor.port = 22
            monitor.allowAnyHosts = true
            withCredentials([
              sshUserPrivateKey(
                credentialsId:      'gary-ThinkPad-T495s',
                keyFileVariable:    'identity',
                passphraseVariable: '',
                usernameVariable:   'userName'
            )]) {
              monitor.user         = "pi"
              monitor.identityFile = identity
              sshCommand remote: monitor, command: "docker login registry.gitlab.com -u ${user} -p ${pass}"
              sshCommand remote: monitor, command: "docker run registry.gitlab.com/garyrizzo1992/crypto-ticker:${BUILD_NUMBER}"
            }
          }
            }
        
      
    }
    post {
        always {
            deleteDir() /* clean up our workspace */
            sh "docker rm registry.gitlab.com/garyrizzo1992/crypto-ticker:${BUILD_NUMBER}"
        }
    }
}
